arguments: src/align_dataset_mtcnn.py Dataset/FaceData/raw Dataset/FaceData/processed --image_size 160 --margin 32 --random_order --gpu_memory_fraction 0.25
--------------------
tensorflow version: 1.13.2
--------------------
git hash: b'a5925dccc84725fce84c02d2ca60b3ef298a889b'
--------------------
b'diff --git a/Dataset/FaceData/processed/Andrew/Andrew0200.png b/Dataset/FaceData/processed/Andrew/Andrew0200.png\ndeleted file mode 100644\nindex 93c16c9..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0200.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0201.png b/Dataset/FaceData/processed/Andrew/Andrew0201.png\ndeleted file mode 100644\nindex b764dfa..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0201.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0202.png b/Dataset/FaceData/processed/Andrew/Andrew0202.png\ndeleted file mode 100644\nindex 278ec9f..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0202.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0203.png b/Dataset/FaceData/processed/Andrew/Andrew0203.png\ndeleted file mode 100644\nindex c8043c7..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0203.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0204.png b/Dataset/FaceData/processed/Andrew/Andrew0204.png\ndeleted file mode 100644\nindex b0c48a9..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0204.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0205.png b/Dataset/FaceData/processed/Andrew/Andrew0205.png\ndeleted file mode 100644\nindex 7dead5e..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0205.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0206.png b/Dataset/FaceData/processed/Andrew/Andrew0206.png\ndeleted file mode 100644\nindex 4824679..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0206.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0221.png b/Dataset/FaceData/processed/Andrew/Andrew0221.png\ndeleted file mode 100644\nindex 38669ed..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0221.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0222.png b/Dataset/FaceData/processed/Andrew/Andrew0222.png\ndeleted file mode 100644\nindex 1990a48..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0222.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0223.png b/Dataset/FaceData/processed/Andrew/Andrew0223.png\ndeleted file mode 100644\nindex bfb98fa..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0223.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0224.png b/Dataset/FaceData/processed/Andrew/Andrew0224.png\ndeleted file mode 100644\nindex 8893ce5..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0224.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0225.png b/Dataset/FaceData/processed/Andrew/Andrew0225.png\ndeleted file mode 100644\nindex d742830..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0225.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0250.png b/Dataset/FaceData/processed/Andrew/Andrew0250.png\ndeleted file mode 100644\nindex fc31f1b..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0250.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0251.png b/Dataset/FaceData/processed/Andrew/Andrew0251.png\ndeleted file mode 100644\nindex 8909adf..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0251.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0252.png b/Dataset/FaceData/processed/Andrew/Andrew0252.png\ndeleted file mode 100644\nindex 30be891..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0252.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0253.png b/Dataset/FaceData/processed/Andrew/Andrew0253.png\ndeleted file mode 100644\nindex 7154ca9..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0253.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0254.png b/Dataset/FaceData/processed/Andrew/Andrew0254.png\ndeleted file mode 100644\nindex da849d5..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0254.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0255.png b/Dataset/FaceData/processed/Andrew/Andrew0255.png\ndeleted file mode 100644\nindex 90701c9..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0255.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0256.png b/Dataset/FaceData/processed/Andrew/Andrew0256.png\ndeleted file mode 100644\nindex 8f6476e..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0256.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0257.png b/Dataset/FaceData/processed/Andrew/Andrew0257.png\ndeleted file mode 100644\nindex c8dd877..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0257.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0258.png b/Dataset/FaceData/processed/Andrew/Andrew0258.png\ndeleted file mode 100644\nindex 962c419..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0258.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/Andrew/Andrew0259.png b/Dataset/FaceData/processed/Andrew/Andrew0259.png\ndeleted file mode 100644\nindex cce024f..0000000\nBinary files a/Dataset/FaceData/processed/Andrew/Andrew0259.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0200.png b/Dataset/FaceData/processed/BanAn/BanAn_0200.png\ndeleted file mode 100644\nindex 812c0a0..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0200.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0201.png b/Dataset/FaceData/processed/BanAn/BanAn_0201.png\ndeleted file mode 100644\nindex 114ae2b..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0201.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0202.png b/Dataset/FaceData/processed/BanAn/BanAn_0202.png\ndeleted file mode 100644\nindex ea46e48..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0202.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0203.png b/Dataset/FaceData/processed/BanAn/BanAn_0203.png\ndeleted file mode 100644\nindex b9a0d64..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0203.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0204.png b/Dataset/FaceData/processed/BanAn/BanAn_0204.png\ndeleted file mode 100644\nindex 8da18fc..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0204.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0205.png b/Dataset/FaceData/processed/BanAn/BanAn_0205.png\ndeleted file mode 100644\nindex 1d05816..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0205.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0206.png b/Dataset/FaceData/processed/BanAn/BanAn_0206.png\ndeleted file mode 100644\nindex bcb11f4..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0206.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0207.png b/Dataset/FaceData/processed/BanAn/BanAn_0207.png\ndeleted file mode 100644\nindex 885f39e..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0207.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0208.png b/Dataset/FaceData/processed/BanAn/BanAn_0208.png\ndeleted file mode 100644\nindex aa2aee8..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0208.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0209.png b/Dataset/FaceData/processed/BanAn/BanAn_0209.png\ndeleted file mode 100644\nindex cb9fab3..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0209.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0210.png b/Dataset/FaceData/processed/BanAn/BanAn_0210.png\ndeleted file mode 100644\nindex 7e88a17..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0210.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0211.png b/Dataset/FaceData/processed/BanAn/BanAn_0211.png\ndeleted file mode 100644\nindex 012de9c..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0211.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0212.png b/Dataset/FaceData/processed/BanAn/BanAn_0212.png\ndeleted file mode 100644\nindex dd0a298..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0212.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0213.png b/Dataset/FaceData/processed/BanAn/BanAn_0213.png\ndeleted file mode 100644\nindex 4ffaef3..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0213.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0214.png b/Dataset/FaceData/processed/BanAn/BanAn_0214.png\ndeleted file mode 100644\nindex b987e4d..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0214.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0215.png b/Dataset/FaceData/processed/BanAn/BanAn_0215.png\ndeleted file mode 100644\nindex 37eb954..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0215.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0216.png b/Dataset/FaceData/processed/BanAn/BanAn_0216.png\ndeleted file mode 100644\nindex cb5ee5d..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0216.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0217.png b/Dataset/FaceData/processed/BanAn/BanAn_0217.png\ndeleted file mode 100644\nindex 5f09f21..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0217.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0218.png b/Dataset/FaceData/processed/BanAn/BanAn_0218.png\ndeleted file mode 100644\nindex e7f80e0..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0218.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0219.png b/Dataset/FaceData/processed/BanAn/BanAn_0219.png\ndeleted file mode 100644\nindex 0fc520c..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0219.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanAn/BanAn_0220.png b/Dataset/FaceData/processed/BanAn/BanAn_0220.png\ndeleted file mode 100644\nindex 3434e7f..0000000\nBinary files a/Dataset/FaceData/processed/BanAn/BanAn_0220.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0200.png b/Dataset/FaceData/processed/BanBao/BanBao0200.png\ndeleted file mode 100644\nindex 074aec3..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0200.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0201.png b/Dataset/FaceData/processed/BanBao/BanBao0201.png\ndeleted file mode 100644\nindex 653136b..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0201.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0202.png b/Dataset/FaceData/processed/BanBao/BanBao0202.png\ndeleted file mode 100644\nindex e7039e0..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0202.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0203.png b/Dataset/FaceData/processed/BanBao/BanBao0203.png\ndeleted file mode 100644\nindex 1ad38b9..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0203.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0204.png b/Dataset/FaceData/processed/BanBao/BanBao0204.png\ndeleted file mode 100644\nindex cfa207b..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0204.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0205.png b/Dataset/FaceData/processed/BanBao/BanBao0205.png\ndeleted file mode 100644\nindex 1167745..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0205.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0206.png b/Dataset/FaceData/processed/BanBao/BanBao0206.png\ndeleted file mode 100644\nindex 67d4d4c..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0206.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0207.png b/Dataset/FaceData/processed/BanBao/BanBao0207.png\ndeleted file mode 100644\nindex d779b36..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0207.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0208.png b/Dataset/FaceData/processed/BanBao/BanBao0208.png\ndeleted file mode 100644\nindex 31ce672..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0208.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0209.png b/Dataset/FaceData/processed/BanBao/BanBao0209.png\ndeleted file mode 100644\nindex 5f784c7..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0209.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0210.png b/Dataset/FaceData/processed/BanBao/BanBao0210.png\ndeleted file mode 100644\nindex d517849..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0210.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0211.png b/Dataset/FaceData/processed/BanBao/BanBao0211.png\ndeleted file mode 100644\nindex 1defc1a..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0211.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0212.png b/Dataset/FaceData/processed/BanBao/BanBao0212.png\ndeleted file mode 100644\nindex bfe62e4..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0212.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0213.png b/Dataset/FaceData/processed/BanBao/BanBao0213.png\ndeleted file mode 100644\nindex 2d15a73..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0213.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0214.png b/Dataset/FaceData/processed/BanBao/BanBao0214.png\ndeleted file mode 100644\nindex abab8c6..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0214.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0215.png b/Dataset/FaceData/processed/BanBao/BanBao0215.png\ndeleted file mode 100644\nindex 1782c68..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0215.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0216.png b/Dataset/FaceData/processed/BanBao/BanBao0216.png\ndeleted file mode 100644\nindex 8c17cab..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0216.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0217.png b/Dataset/FaceData/processed/BanBao/BanBao0217.png\ndeleted file mode 100644\nindex d372c25..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0217.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0218.png b/Dataset/FaceData/processed/BanBao/BanBao0218.png\ndeleted file mode 100644\nindex af2a99d..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0218.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0219.png b/Dataset/FaceData/processed/BanBao/BanBao0219.png\ndeleted file mode 100644\nindex fec89d6..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0219.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanBao/BanBao0220.png b/Dataset/FaceData/processed/BanBao/BanBao0220.png\ndeleted file mode 100644\nindex 3b147d1..0000000\nBinary files a/Dataset/FaceData/processed/BanBao/BanBao0220.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0200.png b/Dataset/FaceData/processed/BanThach/BanThach0200.png\ndeleted file mode 100644\nindex 57b5473..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0200.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0201.png b/Dataset/FaceData/processed/BanThach/BanThach0201.png\ndeleted file mode 100644\nindex b12f1a9..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0201.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0202.png b/Dataset/FaceData/processed/BanThach/BanThach0202.png\ndeleted file mode 100644\nindex dc18eff..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0202.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0203.png b/Dataset/FaceData/processed/BanThach/BanThach0203.png\ndeleted file mode 100644\nindex 17f4b54..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0203.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0204.png b/Dataset/FaceData/processed/BanThach/BanThach0204.png\ndeleted file mode 100644\nindex 83a706e..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0204.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0205.png b/Dataset/FaceData/processed/BanThach/BanThach0205.png\ndeleted file mode 100644\nindex 5e22c64..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0205.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0206.png b/Dataset/FaceData/processed/BanThach/BanThach0206.png\ndeleted file mode 100644\nindex ee18daf..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0206.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0207.png b/Dataset/FaceData/processed/BanThach/BanThach0207.png\ndeleted file mode 100644\nindex 5e40725..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0207.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0208.png b/Dataset/FaceData/processed/BanThach/BanThach0208.png\ndeleted file mode 100644\nindex c4d0ca9..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0208.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0209.png b/Dataset/FaceData/processed/BanThach/BanThach0209.png\ndeleted file mode 100644\nindex 3f20baf..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0209.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0210.png b/Dataset/FaceData/processed/BanThach/BanThach0210.png\ndeleted file mode 100644\nindex 97ca0ef..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0210.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0211.png b/Dataset/FaceData/processed/BanThach/BanThach0211.png\ndeleted file mode 100644\nindex 7bd617f..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0211.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0212.png b/Dataset/FaceData/processed/BanThach/BanThach0212.png\ndeleted file mode 100644\nindex 544ba51..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0212.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/BanThach/BanThach0213.png b/Dataset/FaceData/processed/BanThach/BanThach0213.png\ndeleted file mode 100644\nindex a10468d..0000000\nBinary files a/Dataset/FaceData/processed/BanThach/BanThach0213.png and /dev/null differ\ndiff --git a/Dataset/FaceData/processed/bounding_boxes_15896.txt b/Dataset/FaceData/processed/bounding_boxes_15896.txt\ndeleted file mode 100644\nindex 8e10be4..0000000\n--- a/Dataset/FaceData/processed/bounding_boxes_15896.txt\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-Dataset/FaceData/processed\\andrew\\Andrew0200.png\n-Dataset/FaceData/processed\\andrew\\Andrew0201.png\n-Dataset/FaceData/processed\\andrew\\Andrew0202.png\n-Dataset/FaceData/processed\\andrew\\Andrew0203.png\n-Dataset/FaceData/processed\\andrew\\Andrew0204.png\n-Dataset/FaceData/processed\\andrew\\Andrew0205.png\n-Dataset/FaceData/processed\\andrew\\Andrew0206.png\n-Dataset/FaceData/processed\\andrew\\Andrew0207.png\n-Dataset/FaceData/processed\\andrew\\Andrew0208.png\n-Dataset/FaceData/processed\\andrew\\Andrew0209.png\n-Dataset/FaceData/processed\\andrew\\Andrew0210.png\n-Dataset/FaceData/processed\\andrew\\Andrew0211.png\n-Dataset/FaceData/processed\\andrew\\Andrew0212.png\n-Dataset/FaceData/processed\\andrew\\Andrew0213.png\n-Dataset/FaceData/processed\\andrew\\Andrew0214.png\n-Dataset/FaceData/processed\\andrew\\Andrew0215.png\n-Dataset/FaceData/processed\\andrew\\Andrew0216.png\n-Dataset/FaceData/processed\\andrew\\Andrew0217.png\n-Dataset/FaceData/processed\\andrew\\Andrew0218.png\n-Dataset/FaceData/processed\\andrew\\Andrew0219.png\n-Dataset/FaceData/processed\\andrew\\Andrew0220.png\n-Dataset/FaceData/processed\\andrew\\Andrew0221.png\n-Dataset/FaceData/processed\\andrew\\Andrew0222.png\n-Dataset/FaceData/processed\\andrew\\Andrew0223.png\n-Dataset/FaceData/processed\\andrew\\Andrew0224.png\n-Dataset/FaceData/processed\\andrew\\Andrew0225.png\ndiff --git a/Dataset/FaceData/processed/bounding_boxes_19095.txt b/Dataset/FaceData/processed/bounding_boxes_19095.txt\ndeleted file mode 100644\nindex 8f53df6..0000000\n--- a/Dataset/FaceData/processed/bounding_boxes_19095.txt\n+++ /dev/null\n@@ -1,22 +0,0 @@\n-Dataset/FaceData/processed\\Andrew\\Andrew0202.png 105 3 174 97\n-Dataset/FaceData/processed\\Andrew\\Andrew0253.png 99 6 167 104\n-Dataset/FaceData/processed\\Andrew\\Andrew0225.png 96 19 191 164\n-Dataset/FaceData/processed\\Andrew\\Andrew0205.png 103 2 173 101\n-Dataset/FaceData/processed\\Andrew\\Andrew0255.png 97 5 168 109\n-Dataset/FaceData/processed\\Andrew\\Andrew0254.png 98 6 166 103\n-Dataset/FaceData/processed\\Andrew\\Andrew0258.png 98 6 168 104\n-Dataset/FaceData/processed\\Andrew\\Andrew0259.png 98 5 168 103\n-Dataset/FaceData/processed\\Andrew\\Andrew0204.png 103 1 174 103\n-Dataset/FaceData/processed\\Andrew\\Andrew0223.png 97 26 184 155\n-Dataset/FaceData/processed\\Andrew\\Andrew0221.png 98 26 187 166\n-Dataset/FaceData/processed\\Andrew\\Andrew0251.png 98 9 170 111\n-Dataset/FaceData/processed\\Andrew\\Andrew0250.png 98 6 169 112\n-Dataset/FaceData/processed\\Andrew\\Andrew0200.png 104 1 173 100\n-Dataset/FaceData/processed\\Andrew\\Andrew0256.png 97 6 167 109\n-Dataset/FaceData/processed\\Andrew\\Andrew0222.png 98 32 185 161\n-Dataset/FaceData/processed\\Andrew\\Andrew0257.png 97 4 167 108\n-Dataset/FaceData/processed\\Andrew\\Andrew0224.png 100 28 186 152\n-Dataset/FaceData/processed\\Andrew\\Andrew0201.png 104 2 173 99\n-Dataset/FaceData/processed\\Andrew\\Andrew0203.png 103 1 173 103\n-Dataset/FaceData/processed\\Andrew\\Andrew0206.png 104 2 173 99\n-Dataset/FaceData/processed\\Andrew\\Andrew0252.png 97 3 171 113\ndiff --git a/Dataset/FaceData/processed/bounding_boxes_23142.txt b/Dataset/FaceData/processed/bounding_boxes_23142.txt\ndeleted file mode 100644\nindex 648365d..0000000\n--- a/Dataset/FaceData/processed/bounding_boxes_23142.txt\n+++ /dev/null\n@@ -1,14 +0,0 @@\n-Dataset/FaceData/processed\\BanThach\\BanThach0201.png 46 82 203 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0210.png 49 79 206 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0203.png 46 84 204 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0206.png 46 78 203 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0200.png 49 85 201 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0207.png 48 78 204 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0208.png 47 77 205 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0211.png 47 77 206 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0204.png 47 78 203 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0202.png 47 85 204 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0205.png 47 79 203 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0212.png 47 76 203 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0213.png 46 75 200 250\n-Dataset/FaceData/processed\\BanThach\\BanThach0209.png 48 76 206 250\ndiff --git a/Dataset/FaceData/processed/bounding_boxes_25016.txt b/Dataset/FaceData/processed/bounding_boxes_25016.txt\ndeleted file mode 100644\nindex 0109f63..0000000\n--- a/Dataset/FaceData/processed/bounding_boxes_25016.txt\n+++ /dev/null\n@@ -1,10 +0,0 @@\n-Dataset/FaceData/processed\\andrew\\andrew0.png 376 347 1022 1212\n-Dataset/FaceData/processed\\andrew\\andrew3.png 406 106 604 384\n-Dataset/FaceData/processed\\andrew\\andrew4.png 672 276 1003 733\n-Dataset/FaceData/processed\\andrew\\andrew2.png 373 210 778 765\n-Dataset/FaceData/processed\\andrew\\andrew1.png 30 50 137 188\n-Dataset/FaceData/processed\\tobey\\tobey3.png 260 34 394 202\n-Dataset/FaceData/processed\\tobey\\tobey4.png 100 53 298 314\n-Dataset/FaceData/processed\\tobey\\tobey1.png 266 168 810 897\n-Dataset/FaceData/processed\\tobey\\tobey2.png 31 43 167 221\n-Dataset/FaceData/processed\\tobey\\tobey0.png 44 24 171 188\ndiff --git a/Dataset/FaceData/processed/bounding_boxes_31948.txt b/Dataset/FaceData/processed/bounding_boxes_31948.txt\ndeleted file mode 100644\nindex 6fc8eee..0000000\n--- a/Dataset/FaceData/processed/bounding_boxes_31948.txt\n+++ /dev/null\n@@ -1,26 +0,0 @@\n-Dataset/FaceData/processed\\andrew\\Andrew0217.png\n-Dataset/FaceData/processed\\andrew\\Andrew0224.png\n-Dataset/FaceData/processed\\andrew\\Andrew0214.png\n-Dataset/FaceData/processed\\andrew\\Andrew0215.png\n-Dataset/FaceData/processed\\andrew\\Andrew0212.png\n-Dataset/FaceData/processed\\andrew\\Andrew0205.png\n-Dataset/FaceData/processed\\andrew\\Andrew0216.png\n-Dataset/FaceData/processed\\andrew\\Andrew0209.png\n-Dataset/FaceData/processed\\andrew\\Andrew0202.png\n-Dataset/FaceData/processed\\andrew\\Andrew0204.png\n-Dataset/FaceData/processed\\andrew\\Andrew0206.png\n-Dataset/FaceData/processed\\andrew\\Andrew0219.png\n-Dataset/FaceData/processed\\andrew\\Andrew0223.png\n-Dataset/FaceData/processed\\andrew\\Andrew0200.png\n-Dataset/FaceData/processed\\andrew\\Andrew0218.png\n-Dataset/FaceData/processed\\andrew\\Andrew0208.png\n-Dataset/FaceData/processed\\andrew\\Andrew0201.png\n-Dataset/FaceData/processed\\andrew\\Andrew0222.png\n-Dataset/FaceData/processed\\andrew\\Andrew0203.png\n-Dataset/FaceData/processed\\andrew\\Andrew0207.png\n-Dataset/FaceData/processed\\andrew\\Andrew0210.png\n-Dataset/FaceData/processed\\andrew\\Andrew0225.png\n-Dataset/FaceData/processed\\andrew\\Andrew0221.png\n-Dataset/FaceData/processed\\andrew\\Andrew0213.png\n-Dataset/FaceData/processed\\andrew\\Andrew0211.png\n-Dataset/FaceData/processed\\andrew\\Andrew0220.png\ndiff --git a/Dataset/FaceData/processed/bounding_boxes_33834.txt b/Dataset/FaceData/processed/bounding_boxes_33834.txt\ndeleted file mode 100644\nindex be9153b..0000000\n--- a/Dataset/FaceData/processed/bounding_boxes_33834.txt\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-Dataset/FaceData/processed\\BanBao\\BanBao0205.png 49 0 231 201\n-Dataset/FaceData/processed\\BanBao\\BanBao0215.png 0 0 209 228\n-Dataset/FaceData/processed\\BanBao\\BanBao0220.png 20 0 250 248\n-Dataset/FaceData/processed\\BanBao\\BanBao0208.png 42 0 229 199\n-Dataset/FaceData/processed\\BanBao\\BanBao0204.png 54 0 233 192\n-Dataset/FaceData/processed\\BanBao\\BanBao0201.png 40 0 229 191\n-Dataset/FaceData/processed\\BanBao\\BanBao0210.png 45 0 242 207\n-Dataset/FaceData/processed\\BanBao\\BanBao0214.png 0 0 200 225\n-Dataset/FaceData/processed\\BanBao\\BanBao0202.png 42 0 225 188\n-Dataset/FaceData/processed\\BanBao\\BanBao0200.png 40 0 224 187\n-Dataset/FaceData/processed\\BanBao\\BanBao0207.png 45 0 234 206\n-Dataset/FaceData/processed\\BanBao\\BanBao0206.png 44 0 232 200\n-Dataset/FaceData/processed\\BanBao\\BanBao0209.png 47 0 243 203\n-Dataset/FaceData/processed\\BanBao\\BanBao0213.png 0 0 206 217\n-Dataset/FaceData/processed\\BanBao\\BanBao0211.png 33 0 233 213\n-Dataset/FaceData/processed\\BanBao\\BanBao0216.png 9 0 230 234\n-Dataset/FaceData/processed\\BanBao\\BanBao0217.png 17 0 243 238\n-Dataset/FaceData/processed\\BanBao\\BanBao0212.png 9 0 211 213\n-Dataset/FaceData/processed\\BanBao\\BanBao0219.png 23 0 247 243\n-Dataset/FaceData/processed\\BanBao\\BanBao0203.png 45 0 229 190\n-Dataset/FaceData/processed\\BanBao\\BanBao0218.png 18 0 247 245\ndiff --git a/Dataset/FaceData/processed/bounding_boxes_40843.txt b/Dataset/FaceData/processed/bounding_boxes_40843.txt\ndeleted file mode 100644\nindex 187b30b..0000000\n--- a/Dataset/FaceData/processed/bounding_boxes_40843.txt\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-Dataset/FaceData/processed\\andrew\\andrew0.png 376 347 1022 1212\n-Dataset/FaceData/processed\\andrew\\andrew1.png 30 50 137 188\n-Dataset/FaceData/processed\\andrew\\andrew2.png 373 210 778 765\n-Dataset/FaceData/processed\\andrew\\andrew3.png 406 106 604 384\n-Dataset/FaceData/processed\\andrew\\andrew4.png 672 276 1003 733\ndiff --git a/Dataset/FaceData/processed/bounding_boxes_58068.txt b/Dataset/FaceData/processed/bounding_boxes_58068.txt\ndeleted file mode 100644\nindex 808d0f6..0000000\n--- a/Dataset/FaceData/processed/bounding_boxes_58068.txt\n+++ /dev/null\n@@ -1,21 +0,0 @@\n-Dataset/FaceData/processed\\BanAn\\BanAn_0219.png 25 8 194 209\n-Dataset/FaceData/processed\\BanAn\\BanAn_0200.png 28 7 195 205\n-Dataset/FaceData/processed\\BanAn\\BanAn_0202.png 30 6 199 200\n-Dataset/FaceData/processed\\BanAn\\BanAn_0218.png 26 9 193 206\n-Dataset/FaceData/processed\\BanAn\\BanAn_0201.png 28 6 191 199\n-Dataset/FaceData/processed\\BanAn\\BanAn_0205.png 30 12 196 208\n-Dataset/FaceData/processed\\BanAn\\BanAn_0212.png 25 8 195 208\n-Dataset/FaceData/processed\\BanAn\\BanAn_0207.png 27 5 197 204\n-Dataset/FaceData/processed\\BanAn\\BanAn_0208.png 29 7 194 204\n-Dataset/FaceData/processed\\BanAn\\BanAn_0217.png 24 8 194 208\n-Dataset/FaceData/processed\\BanAn\\BanAn_0211.png 27 10 195 207\n-Dataset/FaceData/processed\\BanAn\\BanAn_0220.png 25 9 193 207\n-Dataset/FaceData/processed\\BanAn\\BanAn_0215.png 26 10 194 208\n-Dataset/FaceData/processed\\BanAn\\BanAn_0203.png 32 10 199 204\n-Dataset/FaceData/processed\\BanAn\\BanAn_0216.png 25 9 194 208\n-Dataset/FaceData/processed\\BanAn\\BanAn_0209.png 28 9 195 206\n-Dataset/FaceData/processed\\BanAn\\BanAn_0214.png 25 8 194 207\n-Dataset/FaceData/processed\\BanAn\\BanAn_0204.png 33 12 198 205\n-Dataset/FaceData/processed\\BanAn\\BanAn_0206.png 29 10 197 205\n-Dataset/FaceData/processed\\BanAn\\BanAn_0210.png 28 10 195 206\n-Dataset/FaceData/processed\\BanAn\\BanAn_0213.png 25 8 194 207\ndiff --git a/Dataset/FaceData/processed/revision_info.txt b/Dataset/FaceData/processed/revision_info.txt\ndeleted file mode 100644\nindex accacab..0000000\n--- a/Dataset/FaceData/processed/revision_info.txt\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-arguments: src/align_dataset_mtcnn.py Dataset/FaceData/raw Dataset/FaceData/processed --image_size 160 --margin 32 --random_order --gpu_memory_fraction 0.25\n---------------------\n-tensorflow version: 1.13.2\n---------------------\n-git hash: b\'cc0524adb708b4b2ed4b23f486f19431670efc59\'\n---------------------\n-b\'diff --git a/requirements.txt b/requirements.txt\\nindex f7084e9..65c00c9 100644\\n--- a/requirements.txt\\n+++ b/requirements.txt\\n@@ -2,7 +2,7 @@ tensorflow==1.15.5\\n keras==2.3.1\\n scipy==1.1.0\\n scikit-learn\\n-opencv-python\\n+opencv-python==4.5.5.62\\n h5py\\n matplotlib\\n Pillow\\ndiff --git a/src/align/detect_face.py b/src/align/detect_face.py\\nindex 7f98ca7..ec0b0d2 100644\\n--- a/src/align/detect_face.py\\n+++ b/src/align/detect_face.py\\n@@ -30,10 +30,11 @@ from six import string_types, iteritems\\n \\n import numpy as np\\n import tensorflow as tf\\n-#from math import floor\\n+# from math import floor\\n import cv2\\n import os\\n \\n+\\n def layer(op):\\n     """Decorator for composable network layers."""\\n \\n@@ -58,6 +59,7 @@ def layer(op):\\n \\n     return layer_decorated\\n \\n+\\n class Network(object):\\n \\n     def __init__(self, inputs, trainable=True):\\n@@ -82,7 +84,7 @@ class Network(object):\\n         session: The current TensorFlow session\\n         ignore_missing: If true, serialized weights for missing layers are ignored.\\n         """\\n-        data_dict = np.load(data_path, encoding=\\\'latin1\\\').item() #pylint: disable=no-member\\n+        data_dict = np.load(data_path, encoding=\\\'latin1\\\', allow_pickle=True).item()  # pylint: disable=no-member\\n \\n         for op_name in data_dict:\\n             with tf.variable_scope(op_name, reuse=True):\\n@@ -198,103 +200,109 @@ class Network(object):\\n             fc = op(feed_in, weights, biases, name=name)\\n             return fc\\n \\n-\\n     """\\n     Multi dimensional softmax,\\n     refer to https://github.com/tensorflow/tensorflow/issues/210\\n     compute softmax along the dimension of target\\n     the native softmax only supports batch_size x dimension\\n     """\\n+\\n     @layer\\n     def softmax(self, target, axis, name=None):\\n         max_axis = tf.reduce_max(target, axis, keepdims=True)\\n-        target_exp = tf.exp(target-max_axis)\\n+        target_exp = tf.exp(target - max_axis)\\n         normalize = tf.reduce_sum(target_exp, axis, keepdims=True)\\n         softmax = tf.div(target_exp, normalize, name)\\n         return softmax\\n-    \\n+\\n+\\n class PNet(Network):\\n     def setup(self):\\n-        (self.feed(\\\'data\\\') #pylint: disable=no-value-for-parameter, no-member\\n-             .conv(3, 3, 10, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv1\\\')\\n-             .prelu(name=\\\'PReLU1\\\')\\n-             .max_pool(2, 2, 2, 2, name=\\\'pool1\\\')\\n-             .conv(3, 3, 16, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv2\\\')\\n-             .prelu(name=\\\'PReLU2\\\')\\n-             .conv(3, 3, 32, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv3\\\')\\n-             .prelu(name=\\\'PReLU3\\\')\\n-             .conv(1, 1, 2, 1, 1, relu=False, name=\\\'conv4-1\\\')\\n-             .softmax(3,name=\\\'prob1\\\'))\\n-\\n-        (self.feed(\\\'PReLU3\\\') #pylint: disable=no-value-for-parameter\\n-             .conv(1, 1, 4, 1, 1, relu=False, name=\\\'conv4-2\\\'))\\n-        \\n+        (self.feed(\\\'data\\\')  # pylint: disable=no-value-for-parameter, no-member\\n+         .conv(3, 3, 10, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv1\\\')\\n+         .prelu(name=\\\'PReLU1\\\')\\n+         .max_pool(2, 2, 2, 2, name=\\\'pool1\\\')\\n+         .conv(3, 3, 16, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv2\\\')\\n+         .prelu(name=\\\'PReLU2\\\')\\n+         .conv(3, 3, 32, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv3\\\')\\n+         .prelu(name=\\\'PReLU3\\\')\\n+         .conv(1, 1, 2, 1, 1, relu=False, name=\\\'conv4-1\\\')\\n+         .softmax(3, name=\\\'prob1\\\'))\\n+\\n+        (self.feed(\\\'PReLU3\\\')  # pylint: disable=no-value-for-parameter\\n+         .conv(1, 1, 4, 1, 1, relu=False, name=\\\'conv4-2\\\'))\\n+\\n+\\n class RNet(Network):\\n     def setup(self):\\n-        (self.feed(\\\'data\\\') #pylint: disable=no-value-for-parameter, no-member\\n-             .conv(3, 3, 28, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv1\\\')\\n-             .prelu(name=\\\'prelu1\\\')\\n-             .max_pool(3, 3, 2, 2, name=\\\'pool1\\\')\\n-             .conv(3, 3, 48, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv2\\\')\\n-             .prelu(name=\\\'prelu2\\\')\\n-             .max_pool(3, 3, 2, 2, padding=\\\'VALID\\\', name=\\\'pool2\\\')\\n-             .conv(2, 2, 64, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv3\\\')\\n-             .prelu(name=\\\'prelu3\\\')\\n-             .fc(128, relu=False, name=\\\'conv4\\\')\\n-             .prelu(name=\\\'prelu4\\\')\\n-             .fc(2, relu=False, name=\\\'conv5-1\\\')\\n-             .softmax(1,name=\\\'prob1\\\'))\\n-\\n-        (self.feed(\\\'prelu4\\\') #pylint: disable=no-value-for-parameter\\n-             .fc(4, relu=False, name=\\\'conv5-2\\\'))\\n+        (self.feed(\\\'data\\\')  # pylint: disable=no-value-for-parameter, no-member\\n+         .conv(3, 3, 28, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv1\\\')\\n+         .prelu(name=\\\'prelu1\\\')\\n+         .max_pool(3, 3, 2, 2, name=\\\'pool1\\\')\\n+         .conv(3, 3, 48, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv2\\\')\\n+         .prelu(name=\\\'prelu2\\\')\\n+         .max_pool(3, 3, 2, 2, padding=\\\'VALID\\\', name=\\\'pool2\\\')\\n+         .conv(2, 2, 64, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv3\\\')\\n+         .prelu(name=\\\'prelu3\\\')\\n+         .fc(128, relu=False, name=\\\'conv4\\\')\\n+         .prelu(name=\\\'prelu4\\\')\\n+         .fc(2, relu=False, name=\\\'conv5-1\\\')\\n+         .softmax(1, name=\\\'prob1\\\'))\\n+\\n+        (self.feed(\\\'prelu4\\\')  # pylint: disable=no-value-for-parameter\\n+         .fc(4, relu=False, name=\\\'conv5-2\\\'))\\n+\\n \\n class ONet(Network):\\n     def setup(self):\\n-        (self.feed(\\\'data\\\') #pylint: disable=no-value-for-parameter, no-member\\n-             .conv(3, 3, 32, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv1\\\')\\n-             .prelu(name=\\\'prelu1\\\')\\n-             .max_pool(3, 3, 2, 2, name=\\\'pool1\\\')\\n-             .conv(3, 3, 64, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv2\\\')\\n-             .prelu(name=\\\'prelu2\\\')\\n-             .max_pool(3, 3, 2, 2, padding=\\\'VALID\\\', name=\\\'pool2\\\')\\n-             .conv(3, 3, 64, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv3\\\')\\n-             .prelu(name=\\\'prelu3\\\')\\n-             .max_pool(2, 2, 2, 2, name=\\\'pool3\\\')\\n-             .conv(2, 2, 128, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv4\\\')\\n-             .prelu(name=\\\'prelu4\\\')\\n-             .fc(256, relu=False, name=\\\'conv5\\\')\\n-             .prelu(name=\\\'prelu5\\\')\\n-             .fc(2, relu=False, name=\\\'conv6-1\\\')\\n-             .softmax(1, name=\\\'prob1\\\'))\\n-\\n-        (self.feed(\\\'prelu5\\\') #pylint: disable=no-value-for-parameter\\n-             .fc(4, relu=False, name=\\\'conv6-2\\\'))\\n-\\n-        (self.feed(\\\'prelu5\\\') #pylint: disable=no-value-for-parameter\\n-             .fc(10, relu=False, name=\\\'conv6-3\\\'))\\n+        (self.feed(\\\'data\\\')  # pylint: disable=no-value-for-parameter, no-member\\n+         .conv(3, 3, 32, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv1\\\')\\n+         .prelu(name=\\\'prelu1\\\')\\n+         .max_pool(3, 3, 2, 2, name=\\\'pool1\\\')\\n+         .conv(3, 3, 64, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv2\\\')\\n+         .prelu(name=\\\'prelu2\\\')\\n+         .max_pool(3, 3, 2, 2, padding=\\\'VALID\\\', name=\\\'pool2\\\')\\n+         .conv(3, 3, 64, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv3\\\')\\n+         .prelu(name=\\\'prelu3\\\')\\n+         .max_pool(2, 2, 2, 2, name=\\\'pool3\\\')\\n+         .conv(2, 2, 128, 1, 1, padding=\\\'VALID\\\', relu=False, name=\\\'conv4\\\')\\n+         .prelu(name=\\\'prelu4\\\')\\n+         .fc(256, relu=False, name=\\\'conv5\\\')\\n+         .prelu(name=\\\'prelu5\\\')\\n+         .fc(2, relu=False, name=\\\'conv6-1\\\')\\n+         .softmax(1, name=\\\'prob1\\\'))\\n+\\n+        (self.feed(\\\'prelu5\\\')  # pylint: disable=no-value-for-parameter\\n+         .fc(4, relu=False, name=\\\'conv6-2\\\'))\\n+\\n+        (self.feed(\\\'prelu5\\\')  # pylint: disable=no-value-for-parameter\\n+         .fc(10, relu=False, name=\\\'conv6-3\\\'))\\n+\\n \\n def create_mtcnn(sess, model_path):\\n     if not model_path:\\n-        model_path,_ = os.path.split(os.path.realpath(__file__))\\n+        model_path, _ = os.path.split(os.path.realpath(__file__))\\n \\n     with tf.variable_scope(\\\'pnet\\\'):\\n-        data = tf.placeholder(tf.float32, (None,None,None,3), \\\'input\\\')\\n-        pnet = PNet({\\\'data\\\':data})\\n+        data = tf.placeholder(tf.float32, (None, None, None, 3), \\\'input\\\')\\n+        pnet = PNet({\\\'data\\\': data})\\n         pnet.load(os.path.join(model_path, \\\'det1.npy\\\'), sess)\\n     with tf.variable_scope(\\\'rnet\\\'):\\n-        data = tf.placeholder(tf.float32, (None,24,24,3), \\\'input\\\')\\n-        rnet = RNet({\\\'data\\\':data})\\n+        data = tf.placeholder(tf.float32, (None, 24, 24, 3), \\\'input\\\')\\n+        rnet = RNet({\\\'data\\\': data})\\n         rnet.load(os.path.join(model_path, \\\'det2.npy\\\'), sess)\\n     with tf.variable_scope(\\\'onet\\\'):\\n-        data = tf.placeholder(tf.float32, (None,48,48,3), \\\'input\\\')\\n-        onet = ONet({\\\'data\\\':data})\\n+        data = tf.placeholder(tf.float32, (None, 48, 48, 3), \\\'input\\\')\\n+        onet = ONet({\\\'data\\\': data})\\n         onet.load(os.path.join(model_path, \\\'det3.npy\\\'), sess)\\n-        \\n-    pnet_fun = lambda img : sess.run((\\\'pnet/conv4-2/BiasAdd:0\\\', \\\'pnet/prob1:0\\\'), feed_dict={\\\'pnet/input:0\\\':img})\\n-    rnet_fun = lambda img : sess.run((\\\'rnet/conv5-2/conv5-2:0\\\', \\\'rnet/prob1:0\\\'), feed_dict={\\\'rnet/input:0\\\':img})\\n-    onet_fun = lambda img : sess.run((\\\'onet/conv6-2/conv6-2:0\\\', \\\'onet/conv6-3/conv6-3:0\\\', \\\'onet/prob1:0\\\'), feed_dict={\\\'onet/input:0\\\':img})\\n+\\n+    pnet_fun = lambda img: sess.run((\\\'pnet/conv4-2/BiasAdd:0\\\', \\\'pnet/prob1:0\\\'), feed_dict={\\\'pnet/input:0\\\': img})\\n+    rnet_fun = lambda img: sess.run((\\\'rnet/conv5-2/conv5-2:0\\\', \\\'rnet/prob1:0\\\'), feed_dict={\\\'rnet/input:0\\\': img})\\n+    onet_fun = lambda img: sess.run((\\\'onet/conv6-2/conv6-2:0\\\', \\\'onet/conv6-3/conv6-3:0\\\', \\\'onet/prob1:0\\\'),\\n+                                    feed_dict={\\\'onet/input:0\\\': img})\\n     return pnet_fun, rnet_fun, onet_fun\\n \\n+\\n def detect_face(img, minsize, pnet, rnet, onet, threshold, factor):\\n     """Detects faces in an image, and returns bounding boxes and points for them.\\n     img: input image\\n@@ -303,118 +311,118 @@ def detect_face(img, minsize, pnet, rnet, onet, threshold, factor):\\n     threshold: threshold=[th1, th2, th3], th1-3 are three steps\\\'s threshold\\n     factor: the factor used to create a scaling pyramid of face sizes to detect in the image.\\n     """\\n-    factor_count=0\\n-    total_boxes=np.empty((0,9))\\n-    points=np.empty(0)\\n-    h=img.shape[0]\\n-    w=img.shape[1]\\n-    minl=np.amin([h, w])\\n-    m=12.0/minsize\\n-    minl=minl*m\\n+    factor_count = 0\\n+    total_boxes = np.empty((0, 9))\\n+    points = np.empty(0)\\n+    h = img.shape[0]\\n+    w = img.shape[1]\\n+    minl = np.amin([h, w])\\n+    m = 12.0 / minsize\\n+    minl = minl * m\\n     # create scale pyramid\\n-    scales=[]\\n-    while minl>=12:\\n-        scales += [m*np.power(factor, factor_count)]\\n-        minl = minl*factor\\n+    scales = []\\n+    while minl >= 12:\\n+        scales += [m * np.power(factor, factor_count)]\\n+        minl = minl * factor\\n         factor_count += 1\\n \\n     # first stage\\n     for scale in scales:\\n-        hs=int(np.ceil(h*scale))\\n-        ws=int(np.ceil(w*scale))\\n+        hs = int(np.ceil(h * scale))\\n+        ws = int(np.ceil(w * scale))\\n         im_data = imresample(img, (hs, ws))\\n-        im_data = (im_data-127.5)*0.0078125\\n+        im_data = (im_data - 127.5) * 0.0078125\\n         img_x = np.expand_dims(im_data, 0)\\n-        img_y = np.transpose(img_x, (0,2,1,3))\\n+        img_y = np.transpose(img_x, (0, 2, 1, 3))\\n         out = pnet(img_y)\\n-        out0 = np.transpose(out[0], (0,2,1,3))\\n-        out1 = np.transpose(out[1], (0,2,1,3))\\n-        \\n-        boxes, _ = generateBoundingBox(out1[0,:,:,1].copy(), out0[0,:,:,:].copy(), scale, threshold[0])\\n-        \\n+        out0 = np.transpose(out[0], (0, 2, 1, 3))\\n+        out1 = np.transpose(out[1], (0, 2, 1, 3))\\n+\\n+        boxes, _ = generateBoundingBox(out1[0, :, :, 1].copy(), out0[0, :, :, :].copy(), scale, threshold[0])\\n+\\n         # inter-scale nms\\n         pick = nms(boxes.copy(), 0.5, \\\'Union\\\')\\n-        if boxes.size>0 and pick.size>0:\\n-            boxes = boxes[pick,:]\\n+        if boxes.size > 0 and pick.size > 0:\\n+            boxes = boxes[pick, :]\\n             total_boxes = np.append(total_boxes, boxes, axis=0)\\n \\n     numbox = total_boxes.shape[0]\\n-    if numbox>0:\\n+    if numbox > 0:\\n         pick = nms(total_boxes.copy(), 0.7, \\\'Union\\\')\\n-        total_boxes = total_boxes[pick,:]\\n-        regw = total_boxes[:,2]-total_boxes[:,0]\\n-        regh = total_boxes[:,3]-total_boxes[:,1]\\n-        qq1 = total_boxes[:,0]+total_boxes[:,5]*regw\\n-        qq2 = total_boxes[:,1]+total_boxes[:,6]*regh\\n-        qq3 = total_boxes[:,2]+total_boxes[:,7]*regw\\n-        qq4 = total_boxes[:,3]+total_boxes[:,8]*regh\\n-        total_boxes = np.transpose(np.vstack([qq1, qq2, qq3, qq4, total_boxes[:,4]]))\\n+        total_boxes = total_boxes[pick, :]\\n+        regw = total_boxes[:, 2] - total_boxes[:, 0]\\n+        regh = total_boxes[:, 3] - total_boxes[:, 1]\\n+        qq1 = total_boxes[:, 0] + total_boxes[:, 5] * regw\\n+        qq2 = total_boxes[:, 1] + total_boxes[:, 6] * regh\\n+        qq3 = total_boxes[:, 2] + total_boxes[:, 7] * regw\\n+        qq4 = total_boxes[:, 3] + total_boxes[:, 8] * regh\\n+        total_boxes = np.transpose(np.vstack([qq1, qq2, qq3, qq4, total_boxes[:, 4]]))\\n         total_boxes = rerec(total_boxes.copy())\\n-        total_boxes[:,0:4] = np.fix(total_boxes[:,0:4]).astype(np.int32)\\n+        total_boxes[:, 0:4] = np.fix(total_boxes[:, 0:4]).astype(np.int32)\\n         dy, edy, dx, edx, y, ey, x, ex, tmpw, tmph = pad(total_boxes.copy(), w, h)\\n \\n     numbox = total_boxes.shape[0]\\n-    if numbox>0:\\n+    if numbox > 0:\\n         # second stage\\n-        tempimg = np.zeros((24,24,3,numbox))\\n-        for k in range(0,numbox):\\n-            tmp = np.zeros((int(tmph[k]),int(tmpw[k]),3))\\n-            tmp[dy[k]-1:edy[k],dx[k]-1:edx[k],:] = img[y[k]-1:ey[k],x[k]-1:ex[k],:]\\n-            if tmp.shape[0]>0 and tmp.shape[1]>0 or tmp.shape[0]==0 and tmp.shape[1]==0:\\n-                tempimg[:,:,:,k] = imresample(tmp, (24, 24))\\n+        tempimg = np.zeros((24, 24, 3, numbox))\\n+        for k in range(0, numbox):\\n+            tmp = np.zeros((int(tmph[k]), int(tmpw[k]), 3))\\n+            tmp[dy[k] - 1:edy[k], dx[k] - 1:edx[k], :] = img[y[k] - 1:ey[k], x[k] - 1:ex[k], :]\\n+            if tmp.shape[0] > 0 and tmp.shape[1] > 0 or tmp.shape[0] == 0 and tmp.shape[1] == 0:\\n+                tempimg[:, :, :, k] = imresample(tmp, (24, 24))\\n             else:\\n                 return np.empty()\\n-        tempimg = (tempimg-127.5)*0.0078125\\n-        tempimg1 = np.transpose(tempimg, (3,1,0,2))\\n+        tempimg = (tempimg - 127.5) * 0.0078125\\n+        tempimg1 = np.transpose(tempimg, (3, 1, 0, 2))\\n         out = rnet(tempimg1)\\n         out0 = np.transpose(out[0])\\n         out1 = np.transpose(out[1])\\n-        score = out1[1,:]\\n-        ipass = np.where(score>threshold[1])\\n-        total_boxes = np.hstack([total_boxes[ipass[0],0:4].copy(), np.expand_dims(score[ipass].copy(),1)])\\n-        mv = out0[:,ipass[0]]\\n-        if total_boxes.shape[0]>0:\\n+        score = out1[1, :]\\n+        ipass = np.where(score > threshold[1])\\n+        total_boxes = np.hstack([total_boxes[ipass[0], 0:4].copy(), np.expand_dims(score[ipass].copy(), 1)])\\n+        mv = out0[:, ipass[0]]\\n+        if total_boxes.shape[0] > 0:\\n             pick = nms(total_boxes, 0.7, \\\'Union\\\')\\n-            total_boxes = total_boxes[pick,:]\\n-            total_boxes = bbreg(total_boxes.copy(), np.transpose(mv[:,pick]))\\n+            total_boxes = total_boxes[pick, :]\\n+            total_boxes = bbreg(total_boxes.copy(), np.transpose(mv[:, pick]))\\n             total_boxes = rerec(total_boxes.copy())\\n \\n     numbox = total_boxes.shape[0]\\n-    if numbox>0:\\n+    if numbox > 0:\\n         # third stage\\n         total_boxes = np.fix(total_boxes).astype(np.int32)\\n         dy, edy, dx, edx, y, ey, x, ex, tmpw, tmph = pad(total_boxes.copy(), w, h)\\n-        tempimg = np.zeros((48,48,3,numbox))\\n-        for k in range(0,numbox):\\n-            tmp = np.zeros((int(tmph[k]),int(tmpw[k]),3))\\n-            tmp[dy[k]-1:edy[k],dx[k]-1:edx[k],:] = img[y[k]-1:ey[k],x[k]-1:ex[k],:]\\n-            if tmp.shape[0]>0 and tmp.shape[1]>0 or tmp.shape[0]==0 and tmp.shape[1]==0:\\n-                tempimg[:,:,:,k] = imresample(tmp, (48, 48))\\n+        tempimg = np.zeros((48, 48, 3, numbox))\\n+        for k in range(0, numbox):\\n+            tmp = np.zeros((int(tmph[k]), int(tmpw[k]), 3))\\n+            tmp[dy[k] - 1:edy[k], dx[k] - 1:edx[k], :] = img[y[k] - 1:ey[k], x[k] - 1:ex[k], :]\\n+            if tmp.shape[0] > 0 and tmp.shape[1] > 0 or tmp.shape[0] == 0 and tmp.shape[1] == 0:\\n+                tempimg[:, :, :, k] = imresample(tmp, (48, 48))\\n             else:\\n                 return np.empty()\\n-        tempimg = (tempimg-127.5)*0.0078125\\n-        tempimg1 = np.transpose(tempimg, (3,1,0,2))\\n+        tempimg = (tempimg - 127.5) * 0.0078125\\n+        tempimg1 = np.transpose(tempimg, (3, 1, 0, 2))\\n         out = onet(tempimg1)\\n         out0 = np.transpose(out[0])\\n         out1 = np.transpose(out[1])\\n         out2 = np.transpose(out[2])\\n-        score = out2[1,:]\\n+        score = out2[1, :]\\n         points = out1\\n-        ipass = np.where(score>threshold[2])\\n-        points = points[:,ipass[0]]\\n-        total_boxes = np.hstack([total_boxes[ipass[0],0:4].copy(), np.expand_dims(score[ipass].copy(),1)])\\n-        mv = out0[:,ipass[0]]\\n-\\n-        w = total_boxes[:,2]-total_boxes[:,0]+1\\n-        h = total_boxes[:,3]-total_boxes[:,1]+1\\n-        points[0:5,:] = np.tile(w,(5, 1))*points[0:5,:] + np.tile(total_boxes[:,0],(5, 1))-1\\n-        points[5:10,:] = np.tile(h,(5, 1))*points[5:10,:] + np.tile(total_boxes[:,1],(5, 1))-1\\n-        if total_boxes.shape[0]>0:\\n+        ipass = np.where(score > threshold[2])\\n+        points = points[:, ipass[0]]\\n+        total_boxes = np.hstack([total_boxes[ipass[0], 0:4].copy(), np.expand_dims(score[ipass].copy(), 1)])\\n+        mv = out0[:, ipass[0]]\\n+\\n+        w = total_boxes[:, 2] - total_boxes[:, 0] + 1\\n+        h = total_boxes[:, 3] - total_boxes[:, 1] + 1\\n+        points[0:5, :] = np.tile(w, (5, 1)) * points[0:5, :] + np.tile(total_boxes[:, 0], (5, 1)) - 1\\n+        points[5:10, :] = np.tile(h, (5, 1)) * points[5:10, :] + np.tile(total_boxes[:, 1], (5, 1)) - 1\\n+        if total_boxes.shape[0] > 0:\\n             total_boxes = bbreg(total_boxes.copy(), np.transpose(mv))\\n             pick = nms(total_boxes.copy(), 0.7, \\\'Min\\\')\\n-            total_boxes = total_boxes[pick,:]\\n-            points = points[:,pick]\\n-                \\n+            total_boxes = total_boxes[pick, :]\\n+            points = points[:, pick]\\n+\\n     return total_boxes, points\\n \\n \\n@@ -643,60 +651,62 @@ def bulk_detect_face(images, detection_window_size_ratio, pnet, rnet, onet, thre\\n \\n \\n # function [boundingbox] = bbreg(boundingbox,reg)\\n-def bbreg(boundingbox,reg):\\n+def bbreg(boundingbox, reg):\\n     """Calibrate bounding boxes"""\\n-    if reg.shape[1]==1:\\n+    if reg.shape[1] == 1:\\n         reg = np.reshape(reg, (reg.shape[2], reg.shape[3]))\\n \\n-    w = boundingbox[:,2]-boundingbox[:,0]+1\\n-    h = boundingbox[:,3]-boundingbox[:,1]+1\\n-    b1 = boundingbox[:,0]+reg[:,0]*w\\n-    b2 = boundingbox[:,1]+reg[:,1]*h\\n-    b3 = boundingbox[:,2]+reg[:,2]*w\\n-    b4 = boundingbox[:,3]+reg[:,3]*h\\n-    boundingbox[:,0:4] = np.transpose(np.vstack([b1, b2, b3, b4 ]))\\n+    w = boundingbox[:, 2] - boundingbox[:, 0] + 1\\n+    h = boundingbox[:, 3] - boundingbox[:, 1] + 1\\n+    b1 = boundingbox[:, 0] + reg[:, 0] * w\\n+    b2 = boundingbox[:, 1] + reg[:, 1] * h\\n+    b3 = boundingbox[:, 2] + reg[:, 2] * w\\n+    b4 = boundingbox[:, 3] + reg[:, 3] * h\\n+    boundingbox[:, 0:4] = np.transpose(np.vstack([b1, b2, b3, b4]))\\n     return boundingbox\\n- \\n+\\n+\\n def generateBoundingBox(imap, reg, scale, t):\\n     """Use heatmap to generate bounding boxes"""\\n-    stride=2\\n-    cellsize=12\\n+    stride = 2\\n+    cellsize = 12\\n \\n     imap = np.transpose(imap)\\n-    dx1 = np.transpose(reg[:,:,0])\\n-    dy1 = np.transpose(reg[:,:,1])\\n-    dx2 = np.transpose(reg[:,:,2])\\n-    dy2 = np.transpose(reg[:,:,3])\\n+    dx1 = np.transpose(reg[:, :, 0])\\n+    dy1 = np.transpose(reg[:, :, 1])\\n+    dx2 = np.transpose(reg[:, :, 2])\\n+    dy2 = np.transpose(reg[:, :, 3])\\n     y, x = np.where(imap >= t)\\n-    if y.shape[0]==1:\\n+    if y.shape[0] == 1:\\n         dx1 = np.flipud(dx1)\\n         dy1 = np.flipud(dy1)\\n         dx2 = np.flipud(dx2)\\n         dy2 = np.flipud(dy2)\\n-    score = imap[(y,x)]\\n-    reg = np.transpose(np.vstack([ dx1[(y,x)], dy1[(y,x)], dx2[(y,x)], dy2[(y,x)] ]))\\n-    if reg.size==0:\\n-        reg = np.empty((0,3))\\n-    bb = np.transpose(np.vstack([y,x]))\\n-    q1 = np.fix((stride*bb+1)/scale)\\n-    q2 = np.fix((stride*bb+cellsize-1+1)/scale)\\n-    boundingbox = np.hstack([q1, q2, np.expand_dims(score,1), reg])\\n+    score = imap[(y, x)]\\n+    reg = np.transpose(np.vstack([dx1[(y, x)], dy1[(y, x)], dx2[(y, x)], dy2[(y, x)]]))\\n+    if reg.size == 0:\\n+        reg = np.empty((0, 3))\\n+    bb = np.transpose(np.vstack([y, x]))\\n+    q1 = np.fix((stride * bb + 1) / scale)\\n+    q2 = np.fix((stride * bb + cellsize - 1 + 1) / scale)\\n+    boundingbox = np.hstack([q1, q2, np.expand_dims(score, 1), reg])\\n     return boundingbox, reg\\n- \\n+\\n+\\n # function pick = nms(boxes,threshold,type)\\n def nms(boxes, threshold, method):\\n-    if boxes.size==0:\\n-        return np.empty((0,3))\\n-    x1 = boxes[:,0]\\n-    y1 = boxes[:,1]\\n-    x2 = boxes[:,2]\\n-    y2 = boxes[:,3]\\n-    s = boxes[:,4]\\n-    area = (x2-x1+1) * (y2-y1+1)\\n+    if boxes.size == 0:\\n+        return np.empty((0, 3))\\n+    x1 = boxes[:, 0]\\n+    y1 = boxes[:, 1]\\n+    x2 = boxes[:, 2]\\n+    y2 = boxes[:, 3]\\n+    s = boxes[:, 4]\\n+    area = (x2 - x1 + 1) * (y2 - y1 + 1)\\n     I = np.argsort(s)\\n     pick = np.zeros_like(s, dtype=np.int16)\\n     counter = 0\\n-    while I.size>0:\\n+    while I.size > 0:\\n         i = I[-1]\\n         pick[counter] = i\\n         counter += 1\\n@@ -705,22 +715,23 @@ def nms(boxes, threshold, method):\\n         yy1 = np.maximum(y1[i], y1[idx])\\n         xx2 = np.minimum(x2[i], x2[idx])\\n         yy2 = np.minimum(y2[i], y2[idx])\\n-        w = np.maximum(0.0, xx2-xx1+1)\\n-        h = np.maximum(0.0, yy2-yy1+1)\\n+        w = np.maximum(0.0, xx2 - xx1 + 1)\\n+        h = np.maximum(0.0, yy2 - yy1 + 1)\\n         inter = w * h\\n         if method is \\\'Min\\\':\\n             o = inter / np.minimum(area[i], area[idx])\\n         else:\\n             o = inter / (area[i] + area[idx] - inter)\\n-        I = I[np.where(o<=threshold)]\\n+        I = I[np.where(o <= threshold)]\\n     pick = pick[0:counter]\\n     return pick\\n \\n+\\n # function [dy edy dx edx y ey x ex tmpw tmph] = pad(total_boxes,w,h)\\n def pad(total_boxes, w, h):\\n     """Compute the padding coordinates (pad the bounding boxes to square)"""\\n-    tmpw = (total_boxes[:,2]-total_boxes[:,0]+1).astype(np.int32)\\n-    tmph = (total_boxes[:,3]-total_boxes[:,1]+1).astype(np.int32)\\n+    tmpw = (total_boxes[:, 2] - total_boxes[:, 0] + 1).astype(np.int32)\\n+    tmph = (total_boxes[:, 3] - total_boxes[:, 1] + 1).astype(np.int32)\\n     numbox = total_boxes.shape[0]\\n \\n     dx = np.ones((numbox), dtype=np.int32)\\n@@ -728,42 +739,44 @@ def pad(total_boxes, w, h):\\n     edx = tmpw.copy().astype(np.int32)\\n     edy = tmph.copy().astype(np.int32)\\n \\n-    x = total_boxes[:,0].copy().astype(np.int32)\\n-    y = total_boxes[:,1].copy().astype(np.int32)\\n-    ex = total_boxes[:,2].copy().astype(np.int32)\\n-    ey = total_boxes[:,3].copy().astype(np.int32)\\n+    x = total_boxes[:, 0].copy().astype(np.int32)\\n+    y = total_boxes[:, 1].copy().astype(np.int32)\\n+    ex = total_boxes[:, 2].copy().astype(np.int32)\\n+    ey = total_boxes[:, 3].copy().astype(np.int32)\\n \\n-    tmp = np.where(ex>w)\\n-    edx.flat[tmp] = np.expand_dims(-ex[tmp]+w+tmpw[tmp],1)\\n+    tmp = np.where(ex > w)\\n+    edx.flat[tmp] = np.expand_dims(-ex[tmp] + w + tmpw[tmp], 1)\\n     ex[tmp] = w\\n-    \\n-    tmp = np.where(ey>h)\\n-    edy.flat[tmp] = np.expand_dims(-ey[tmp]+h+tmph[tmp],1)\\n+\\n+    tmp = np.where(ey > h)\\n+    edy.flat[tmp] = np.expand_dims(-ey[tmp] + h + tmph[tmp], 1)\\n     ey[tmp] = h\\n \\n-    tmp = np.where(x<1)\\n-    dx.flat[tmp] = np.expand_dims(2-x[tmp],1)\\n+    tmp = np.where(x < 1)\\n+    dx.flat[tmp] = np.expand_dims(2 - x[tmp], 1)\\n     x[tmp] = 1\\n \\n-    tmp = np.where(y<1)\\n-    dy.flat[tmp] = np.expand_dims(2-y[tmp],1)\\n+    tmp = np.where(y < 1)\\n+    dy.flat[tmp] = np.expand_dims(2 - y[tmp], 1)\\n     y[tmp] = 1\\n-    \\n+\\n     return dy, edy, dx, edx, y, ey, x, ex, tmpw, tmph\\n \\n+\\n # function [bboxA] = rerec(bboxA)\\n def rerec(bboxA):\\n     """Convert bboxA to square."""\\n-    h = bboxA[:,3]-bboxA[:,1]\\n-    w = bboxA[:,2]-bboxA[:,0]\\n+    h = bboxA[:, 3] - bboxA[:, 1]\\n+    w = bboxA[:, 2] - bboxA[:, 0]\\n     l = np.maximum(w, h)\\n-    bboxA[:,0] = bboxA[:,0]+w*0.5-l*0.5\\n-    bboxA[:,1] = bboxA[:,1]+h*0.5-l*0.5\\n-    bboxA[:,2:4] = bboxA[:,0:2] + np.transpose(np.tile(l,(2,1)))\\n+    bboxA[:, 0] = bboxA[:, 0] + w * 0.5 - l * 0.5\\n+    bboxA[:, 1] = bboxA[:, 1] + h * 0.5 - l * 0.5\\n+    bboxA[:, 2:4] = bboxA[:, 0:2] + np.transpose(np.tile(l, (2, 1)))\\n     return bboxA\\n \\n+\\n def imresample(img, sz):\\n-    im_data = cv2.resize(img, (sz[1], sz[0]), interpolation=cv2.INTER_AREA) #@UndefinedVariable\\n+    im_data = cv2.resize(img, (sz[1], sz[0]), interpolation=cv2.INTER_AREA)  # @UndefinedVariable\\n     return im_data\\n \\n     # This method is kept for debugging purpose\\n@@ -778,4 +791,3 @@ def imresample(img, sz):\\n #             for a3 in range(0,3):\\n #                 im_data[a1,a2,a3] = img[int(floor(a1*dy)),int(floor(a2*dx)),a3]\\n #     return im_data\\n-\\ndiff --git a/src/align_dataset_mtcnn.py b/src/align_dataset_mtcnn.py\\nindex 7d5e735..27bceb0 100644\\n--- a/src/align_dataset_mtcnn.py\\n+++ b/src/align_dataset_mtcnn.py\\n@@ -36,32 +36,33 @@ import align.detect_face\\n import random\\n from time import sleep\\n \\n+\\n def main(args):\\n     sleep(random.random())\\n     output_dir = os.path.expanduser(args.output_dir)\\n     if not os.path.exists(output_dir):\\n         os.makedirs(output_dir)\\n     # Store some git revision info in a text file in the log directory\\n-    src_path,_ = os.path.split(os.path.realpath(__file__))\\n+    src_path, _ = os.path.split(os.path.realpath(__file__))\\n     facenet.store_revision_info(src_path, output_dir, \\\' \\\'.join(sys.argv))\\n     dataset = facenet.get_dataset(args.input_dir)\\n-    \\n+\\n     print(\\\'Creating networks and loading parameters\\\')\\n-    \\n+\\n     with tf.Graph().as_default():\\n         gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=args.gpu_memory_fraction)\\n         sess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options, log_device_placement=False))\\n         with sess.as_default():\\n             pnet, rnet, onet = align.detect_face.create_mtcnn(sess, None)\\n-    \\n-    minsize = 20 # minimum size of face\\n-    threshold = [ 0.6, 0.7, 0.7 ]  # three steps\\\'s threshold\\n-    factor = 0.709 # scale factor\\n+\\n+    minsize = 20  # minimum size of face\\n+    threshold = [0.6, 0.7, 0.7]  # three steps\\\'s threshold\\n+    factor = 0.709  # scale factor\\n \\n     # Add a random key to the filename to allow alignment using multiple processes\\n     random_key = np.random.randint(0, high=99999)\\n     bounding_boxes_filename = os.path.join(output_dir, \\\'bounding_boxes_%05d.txt\\\' % random_key)\\n-    \\n+\\n     with open(bounding_boxes_filename, "w") as text_file:\\n         nrof_images_total = 0\\n         nrof_successfully_aligned = 0\\n@@ -76,7 +77,7 @@ def main(args):\\n             for image_path in cls.image_paths:\\n                 nrof_images_total += 1\\n                 filename = os.path.splitext(os.path.split(image_path)[1])[0]\\n-                output_filename = os.path.join(output_class_dir, filename+\\\'.png\\\')\\n+                output_filename = os.path.join(output_class_dir, filename + \\\'.png\\\')\\n                 print(image_path)\\n                 if not os.path.exists(output_filename):\\n                     try:\\n@@ -85,42 +86,45 @@ def main(args):\\n                         errorMessage = \\\'{}: {}\\\'.format(image_path, e)\\n                         print(errorMessage)\\n                     else:\\n-                        if img.ndim<2:\\n+                        if img.ndim < 2:\\n                             print(\\\'Unable to align "%s"\\\' % image_path)\\n                             text_file.write(\\\'%s\\\\n\\\' % (output_filename))\\n                             continue\\n                         if img.ndim == 2:\\n                             img = facenet.to_rgb(img)\\n-                        img = img[:,:,0:3]\\n-    \\n-                        bounding_boxes, _ = align.detect_face.detect_face(img, minsize, pnet, rnet, onet, threshold, factor)\\n+                        img = img[:, :, 0:3]\\n+\\n+                        bounding_boxes, _ = align.detect_face.detect_face(img, minsize, pnet, rnet, onet, threshold,\\n+                                                                          factor)\\n                         nrof_faces = bounding_boxes.shape[0]\\n-                        if nrof_faces>0:\\n-                            det = bounding_boxes[:,0:4]\\n+                        if nrof_faces > 0:\\n+                            det = bounding_boxes[:, 0:4]\\n                             det_arr = []\\n                             img_size = np.asarray(img.shape)[0:2]\\n-                            if nrof_faces>1:\\n+                            if nrof_faces > 1:\\n                                 if args.detect_multiple_faces:\\n                                     for i in range(nrof_faces):\\n                                         det_arr.append(np.squeeze(det[i]))\\n                                 else:\\n-                                    bounding_box_size = (det[:,2]-det[:,0])*(det[:,3]-det[:,1])\\n+                                    bounding_box_size = (det[:, 2] - det[:, 0]) * (det[:, 3] - det[:, 1])\\n                                     img_center = img_size / 2\\n-                                    offsets = np.vstack([ (det[:,0]+det[:,2])/2-img_center[1], (det[:,1]+det[:,3])/2-img_center[0] ])\\n-                                    offset_dist_squared = np.sum(np.power(offsets,2.0),0)\\n-                                    index = np.argmax(bounding_box_size-offset_dist_squared*2.0) # some extra weight on the centering\\n-                                    det_arr.append(det[index,:])\\n+                                    offsets = np.vstack([(det[:, 0] + det[:, 2]) / 2 - img_center[1],\\n+                                                         (det[:, 1] + det[:, 3]) / 2 - img_center[0]])\\n+                                    offset_dist_squared = np.sum(np.power(offsets, 2.0), 0)\\n+                                    index = np.argmax(\\n+                                        bounding_box_size - offset_dist_squared * 2.0)  # some extra weight on the centering\\n+                                    det_arr.append(det[index, :])\\n                             else:\\n                                 det_arr.append(np.squeeze(det))\\n \\n                             for i, det in enumerate(det_arr):\\n                                 det = np.squeeze(det)\\n                                 bb = np.zeros(4, dtype=np.int32)\\n-                                bb[0] = np.maximum(det[0]-args.margin/2, 0)\\n-                                bb[1] = np.maximum(det[1]-args.margin/2, 0)\\n-                                bb[2] = np.minimum(det[2]+args.margin/2, img_size[1])\\n-                                bb[3] = np.minimum(det[3]+args.margin/2, img_size[0])\\n-                                cropped = img[bb[1]:bb[3],bb[0]:bb[2],:]\\n+                                bb[0] = np.maximum(det[0] - args.margin / 2, 0)\\n+                                bb[1] = np.maximum(det[1] - args.margin / 2, 0)\\n+                                bb[2] = np.minimum(det[2] + args.margin / 2, img_size[1])\\n+                                bb[3] = np.minimum(det[3] + args.margin / 2, img_size[0])\\n+                                cropped = img[bb[1]:bb[3], bb[0]:bb[2], :]\\n                                 scaled = misc.imresize(cropped, (args.image_size, args.image_size), interp=\\\'bilinear\\\')\\n                                 nrof_successfully_aligned += 1\\n                                 filename_base, file_extension = os.path.splitext(output_filename)\\n@@ -133,27 +137,29 @@ def main(args):\\n                         else:\\n                             print(\\\'Unable to align "%s"\\\' % image_path)\\n                             text_file.write(\\\'%s\\\\n\\\' % (output_filename))\\n-                            \\n+\\n     print(\\\'Total number of images: %d\\\' % nrof_images_total)\\n     print(\\\'Number of successfully aligned images: %d\\\' % nrof_successfully_aligned)\\n-            \\n+\\n \\n def parse_arguments(argv):\\n     parser = argparse.ArgumentParser()\\n-    \\n+\\n     parser.add_argument(\\\'input_dir\\\', type=str, help=\\\'Directory with unaligned images.\\\')\\n     parser.add_argument(\\\'output_dir\\\', type=str, help=\\\'Directory with aligned face thumbnails.\\\')\\n     parser.add_argument(\\\'--image_size\\\', type=int,\\n-        help=\\\'Image size (height, width) in pixels.\\\', default=182)\\n+                        help=\\\'Image size (height, width) in pixels.\\\', default=182)\\n     parser.add_argument(\\\'--margin\\\', type=int,\\n-        help=\\\'Margin for the crop around the bounding box (height, width) in pixels.\\\', default=44)\\n-    parser.add_argument(\\\'--random_order\\\', \\n-        help=\\\'Shuffles the order of images to enable alignment using multiple processes.\\\', action=\\\'store_true\\\')\\n+                        help=\\\'Margin for the crop around the bounding box (height, width) in pixels.\\\', default=44)\\n+    parser.add_argument(\\\'--random_order\\\',\\n+                        help=\\\'Shuffles the order of images to enable alignment using multiple processes.\\\',\\n+                        action=\\\'store_true\\\')\\n     parser.add_argument(\\\'--gpu_memory_fraction\\\', type=float,\\n-        help=\\\'Upper bound on the amount of GPU memory that will be used by the process.\\\', default=1.0)\\n+                        help=\\\'Upper bound on the amount of GPU memory that will be used by the process.\\\', default=1.0)\\n     parser.add_argument(\\\'--detect_multiple_faces\\\', type=bool,\\n                         help=\\\'Detect and align multiple faces per image.\\\', default=False)\\n     return parser.parse_args(argv)\\n \\n+\\n if __name__ == \\\'__main__\\\':\\n     main(parse_arguments(sys.argv[1:]))\\ndiff --git a/src/face_rec_cam.py b/src/face_rec_cam.py\\nindex cfbd4f4..0cd2c87 100644\\n--- a/src/face_rec_cam.py\\n+++ b/src/face_rec_cam.py\\n@@ -5,7 +5,6 @@ from __future__ import print_function\\n import tensorflow as tf\\n from imutils.video import VideoStream\\n \\n-\\n import argparse\\n import facenet\\n import imutils\\n@@ -61,7 +60,7 @@ def main():\\n             people_detected = set()\\n             person_detected = collections.Counter()\\n \\n-            cap  = VideoStream(src=0).start()\\n+            cap = VideoStream(src=0).start()\\n \\n             while (True):\\n                 frame = cap.read()\\n@@ -83,10 +82,10 @@ def main():\\n                             bb[i][1] = det[i][1]\\n                             bb[i][2] = det[i][2]\\n                             bb[i][3] = det[i][3]\\n-                            print(bb[i][3]-bb[i][1])\\n+                            print(bb[i][3] - bb[i][1])\\n                             print(frame.shape[0])\\n-                            print((bb[i][3]-bb[i][1])/frame.shape[0])\\n-                            if (bb[i][3]-bb[i][1])/frame.shape[0]>0.25:\\n+                            print((bb[i][3] - bb[i][1]) / frame.shape[0])\\n+                            if (bb[i][3] - bb[i][1]) / frame.shape[0] > 0.25:\\n                                 cropped = frame[bb[i][1]:bb[i][3], bb[i][0]:bb[i][2], :]\\n                                 scaled = cv2.resize(cropped, (INPUT_IMAGE_SIZE, INPUT_IMAGE_SIZE),\\n                                                     interpolation=cv2.INTER_CUBIC)\\n@@ -102,23 +101,26 @@ def main():\\n                                 best_name = class_names[best_class_indices[0]]\\n                                 print("Name: {}, Probability: {}".format(best_name, best_class_probabilities))\\n \\n+                                # Ve khung mau xanh quanh khuon mat\\n+                                cv2.rectangle(frame, (bb[i][0], bb[i][1]), (bb[i][2], bb[i][3]), (0, 255, 0), 2)\\n+                                text_x = bb[i][0]\\n+                                text_y = bb[i][3] + 20\\n \\n-\\n-                                if best_class_probabilities > 0.8:\\n-                                    cv2.rectangle(frame, (bb[i][0], bb[i][1]), (bb[i][2], bb[i][3]), (0, 255, 0), 2)\\n-                                    text_x = bb[i][0]\\n-                                    text_y = bb[i][3] + 20\\n-\\n+                                # Neu ty le nhan dang > 0.5 thi hien thi ten\\n+                                if best_class_probabilities > 0.5:\\n                                     name = class_names[best_class_indices[0]]\\n-                                    cv2.putText(frame, name, (text_x, text_y), cv2.FONT_HERSHEY_COMPLEX_SMALL,\\n-                                                1, (255, 255, 255), thickness=1, lineType=2)\\n-                                    cv2.putText(frame, str(round(best_class_probabilities[0], 3)), (text_x, text_y + 17),\\n-                                                cv2.FONT_HERSHEY_COMPLEX_SMALL,\\n-                                                1, (255, 255, 255), thickness=1, lineType=2)\\n-                                    person_detected[best_name] += 1\\n                                 else:\\n+                                    # Con neu <=0.5 thi hien thi Unknow\\n                                     name = "Unknown"\\n \\n+                                # Viet text len tren frame\\n+                                cv2.putText(frame, name, (text_x, text_y), cv2.FONT_HERSHEY_COMPLEX_SMALL,\\n+                                            1, (255, 255, 255), thickness=1, lineType=2)\\n+                                cv2.putText(frame, str(round(best_class_probabilities[0], 3)), (text_x, text_y + 17),\\n+                                            cv2.FONT_HERSHEY_COMPLEX_SMALL,\\n+                                            1, (255, 255, 255), thickness=1, lineType=2)\\n+                                person_detected[best_name] += 1\\n+\\n                 except:\\n                     pass\\n \\n@@ -130,4 +132,4 @@ def main():\\n             cv2.destroyAllWindows()\\n \\n \\n-main()\\n\\\\ No newline at end of file\\n+main()\'\n\\ No newline at end of file\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0200.bmp b/Dataset/FaceData/raw/Andrew/Andrew0200.bmp\ndeleted file mode 100644\nindex 6290d83..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0200.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0201.bmp b/Dataset/FaceData/raw/Andrew/Andrew0201.bmp\ndeleted file mode 100644\nindex 212e3f5..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0201.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0202.bmp b/Dataset/FaceData/raw/Andrew/Andrew0202.bmp\ndeleted file mode 100644\nindex f51d6b2..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0202.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0203.bmp b/Dataset/FaceData/raw/Andrew/Andrew0203.bmp\ndeleted file mode 100644\nindex 969db88..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0203.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0204.bmp b/Dataset/FaceData/raw/Andrew/Andrew0204.bmp\ndeleted file mode 100644\nindex 6f12938..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0204.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0205.bmp b/Dataset/FaceData/raw/Andrew/Andrew0205.bmp\ndeleted file mode 100644\nindex 53d89a5..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0205.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0206.bmp b/Dataset/FaceData/raw/Andrew/Andrew0206.bmp\ndeleted file mode 100644\nindex e6e0ac2..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0206.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0221.bmp b/Dataset/FaceData/raw/Andrew/Andrew0221.bmp\ndeleted file mode 100644\nindex 6e99934..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0221.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0222.bmp b/Dataset/FaceData/raw/Andrew/Andrew0222.bmp\ndeleted file mode 100644\nindex f4d0913..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0222.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0223.bmp b/Dataset/FaceData/raw/Andrew/Andrew0223.bmp\ndeleted file mode 100644\nindex 70e5caf..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0223.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0224.bmp b/Dataset/FaceData/raw/Andrew/Andrew0224.bmp\ndeleted file mode 100644\nindex 676fda5..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0224.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0225.bmp b/Dataset/FaceData/raw/Andrew/Andrew0225.bmp\ndeleted file mode 100644\nindex 6578614..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0225.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0250.bmp b/Dataset/FaceData/raw/Andrew/Andrew0250.bmp\ndeleted file mode 100644\nindex 18d5a72..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0250.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0251.bmp b/Dataset/FaceData/raw/Andrew/Andrew0251.bmp\ndeleted file mode 100644\nindex c2dc201..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0251.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0252.bmp b/Dataset/FaceData/raw/Andrew/Andrew0252.bmp\ndeleted file mode 100644\nindex aab1a16..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0252.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0253.bmp b/Dataset/FaceData/raw/Andrew/Andrew0253.bmp\ndeleted file mode 100644\nindex 3449e46..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0253.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0254.bmp b/Dataset/FaceData/raw/Andrew/Andrew0254.bmp\ndeleted file mode 100644\nindex 74c8a3a..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0254.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0255.bmp b/Dataset/FaceData/raw/Andrew/Andrew0255.bmp\ndeleted file mode 100644\nindex 38a8bff..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0255.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0256.bmp b/Dataset/FaceData/raw/Andrew/Andrew0256.bmp\ndeleted file mode 100644\nindex a4d030d..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0256.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0257.bmp b/Dataset/FaceData/raw/Andrew/Andrew0257.bmp\ndeleted file mode 100644\nindex 46b729c..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0257.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0258.bmp b/Dataset/FaceData/raw/Andrew/Andrew0258.bmp\ndeleted file mode 100644\nindex 1818783..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0258.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/Andrew0259.bmp b/Dataset/FaceData/raw/Andrew/Andrew0259.bmp\ndeleted file mode 100644\nindex 1f80c5d..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/Andrew0259.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/Andrew/andrew3.jpg b/Dataset/FaceData/raw/Andrew/andrew3.jpg\ndeleted file mode 100644\nindex 9ebc2da..0000000\nBinary files a/Dataset/FaceData/raw/Andrew/andrew3.jpg and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0200.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0200.bmp\ndeleted file mode 100644\nindex 6a77150..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0200.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0201.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0201.bmp\ndeleted file mode 100644\nindex e363b3a..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0201.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0202.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0202.bmp\ndeleted file mode 100644\nindex 3221001..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0202.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0203.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0203.bmp\ndeleted file mode 100644\nindex 4f14c5b..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0203.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0204.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0204.bmp\ndeleted file mode 100644\nindex abc8beb..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0204.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0205.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0205.bmp\ndeleted file mode 100644\nindex 2b88856..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0205.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0206.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0206.bmp\ndeleted file mode 100644\nindex 3a37032..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0206.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0207.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0207.bmp\ndeleted file mode 100644\nindex a71e694..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0207.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0208.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0208.bmp\ndeleted file mode 100644\nindex 72e0ca4..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0208.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0209.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0209.bmp\ndeleted file mode 100644\nindex f98a345..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0209.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0210.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0210.bmp\ndeleted file mode 100644\nindex f1f4fff..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0210.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0211.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0211.bmp\ndeleted file mode 100644\nindex f53541e..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0211.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0212.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0212.bmp\ndeleted file mode 100644\nindex aaf9b8c..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0212.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0213.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0213.bmp\ndeleted file mode 100644\nindex 0efc847..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0213.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0214.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0214.bmp\ndeleted file mode 100644\nindex 97f1857..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0214.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0215.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0215.bmp\ndeleted file mode 100644\nindex 016d5a8..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0215.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0216.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0216.bmp\ndeleted file mode 100644\nindex d9e644c..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0216.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0217.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0217.bmp\ndeleted file mode 100644\nindex af42493..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0217.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0218.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0218.bmp\ndeleted file mode 100644\nindex ebf1dd7..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0218.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0219.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0219.bmp\ndeleted file mode 100644\nindex b1e57e9..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0219.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanAn/BanAn_0220.bmp b/Dataset/FaceData/raw/BanAn/BanAn_0220.bmp\ndeleted file mode 100644\nindex 4762e0b..0000000\nBinary files a/Dataset/FaceData/raw/BanAn/BanAn_0220.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0200.bmp b/Dataset/FaceData/raw/BanBao/BanBao0200.bmp\ndeleted file mode 100644\nindex 7856e57..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0200.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0201.bmp b/Dataset/FaceData/raw/BanBao/BanBao0201.bmp\ndeleted file mode 100644\nindex 5816f65..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0201.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0202.bmp b/Dataset/FaceData/raw/BanBao/BanBao0202.bmp\ndeleted file mode 100644\nindex 0222faf..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0202.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0203.bmp b/Dataset/FaceData/raw/BanBao/BanBao0203.bmp\ndeleted file mode 100644\nindex 7a6caf9..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0203.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0204.bmp b/Dataset/FaceData/raw/BanBao/BanBao0204.bmp\ndeleted file mode 100644\nindex a2e35a3..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0204.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0205.bmp b/Dataset/FaceData/raw/BanBao/BanBao0205.bmp\ndeleted file mode 100644\nindex 8646b6b..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0205.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0206.bmp b/Dataset/FaceData/raw/BanBao/BanBao0206.bmp\ndeleted file mode 100644\nindex 750916b..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0206.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0207.bmp b/Dataset/FaceData/raw/BanBao/BanBao0207.bmp\ndeleted file mode 100644\nindex fc08ff0..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0207.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0208.bmp b/Dataset/FaceData/raw/BanBao/BanBao0208.bmp\ndeleted file mode 100644\nindex f138733..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0208.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0209.bmp b/Dataset/FaceData/raw/BanBao/BanBao0209.bmp\ndeleted file mode 100644\nindex b1e8806..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0209.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0210.bmp b/Dataset/FaceData/raw/BanBao/BanBao0210.bmp\ndeleted file mode 100644\nindex d9ae6bb..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0210.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0211.bmp b/Dataset/FaceData/raw/BanBao/BanBao0211.bmp\ndeleted file mode 100644\nindex b3b4d56..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0211.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0212.bmp b/Dataset/FaceData/raw/BanBao/BanBao0212.bmp\ndeleted file mode 100644\nindex feb0b47..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0212.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0213.bmp b/Dataset/FaceData/raw/BanBao/BanBao0213.bmp\ndeleted file mode 100644\nindex 30cce90..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0213.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0214.bmp b/Dataset/FaceData/raw/BanBao/BanBao0214.bmp\ndeleted file mode 100644\nindex 5690ca4..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0214.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0215.bmp b/Dataset/FaceData/raw/BanBao/BanBao0215.bmp\ndeleted file mode 100644\nindex c5c3532..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0215.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0216.bmp b/Dataset/FaceData/raw/BanBao/BanBao0216.bmp\ndeleted file mode 100644\nindex a968b7a..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0216.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0217.bmp b/Dataset/FaceData/raw/BanBao/BanBao0217.bmp\ndeleted file mode 100644\nindex e857d50..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0217.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0218.bmp b/Dataset/FaceData/raw/BanBao/BanBao0218.bmp\ndeleted file mode 100644\nindex 7582ed7..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0218.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0219.bmp b/Dataset/FaceData/raw/BanBao/BanBao0219.bmp\ndeleted file mode 100644\nindex c38f9b2..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0219.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanBao/BanBao0220.bmp b/Dataset/FaceData/raw/BanBao/BanBao0220.bmp\ndeleted file mode 100644\nindex f699cf4..0000000\nBinary files a/Dataset/FaceData/raw/BanBao/BanBao0220.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0200.bmp b/Dataset/FaceData/raw/BanThach/BanThach0200.bmp\ndeleted file mode 100644\nindex 3eb4404..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0200.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0201.bmp b/Dataset/FaceData/raw/BanThach/BanThach0201.bmp\ndeleted file mode 100644\nindex 99293cd..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0201.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0202.bmp b/Dataset/FaceData/raw/BanThach/BanThach0202.bmp\ndeleted file mode 100644\nindex 2467090..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0202.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0203.bmp b/Dataset/FaceData/raw/BanThach/BanThach0203.bmp\ndeleted file mode 100644\nindex 0ff9afc..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0203.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0204.bmp b/Dataset/FaceData/raw/BanThach/BanThach0204.bmp\ndeleted file mode 100644\nindex ded6581..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0204.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0205.bmp b/Dataset/FaceData/raw/BanThach/BanThach0205.bmp\ndeleted file mode 100644\nindex a86ba0b..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0205.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0206.bmp b/Dataset/FaceData/raw/BanThach/BanThach0206.bmp\ndeleted file mode 100644\nindex 5a75ca6..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0206.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0207.bmp b/Dataset/FaceData/raw/BanThach/BanThach0207.bmp\ndeleted file mode 100644\nindex dc19f99..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0207.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0208.bmp b/Dataset/FaceData/raw/BanThach/BanThach0208.bmp\ndeleted file mode 100644\nindex 38590e2..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0208.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0209.bmp b/Dataset/FaceData/raw/BanThach/BanThach0209.bmp\ndeleted file mode 100644\nindex 53c1da4..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0209.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0210.bmp b/Dataset/FaceData/raw/BanThach/BanThach0210.bmp\ndeleted file mode 100644\nindex d1b9220..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0210.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0211.bmp b/Dataset/FaceData/raw/BanThach/BanThach0211.bmp\ndeleted file mode 100644\nindex 85eca51..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0211.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0212.bmp b/Dataset/FaceData/raw/BanThach/BanThach0212.bmp\ndeleted file mode 100644\nindex c091f61..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0212.bmp and /dev/null differ\ndiff --git a/Dataset/FaceData/raw/BanThach/BanThach0213.bmp b/Dataset/FaceData/raw/BanThach/BanThach0213.bmp\ndeleted file mode 100644\nindex b867414..0000000\nBinary files a/Dataset/FaceData/raw/BanThach/BanThach0213.bmp and /dev/null differ\ndiff --git a/video/Andrew.mp4 b/video/Andrew.mp4\ndeleted file mode 100644\nindex cedb9bc..0000000\nBinary files a/video/Andrew.mp4 and /dev/null differ\ndiff --git a/video/BanThach.mp4 b/video/BanThach.mp4\ndeleted file mode 100644\nindex b496790..0000000\nBinary files a/video/BanThach.mp4 and /dev/null differ\ndiff --git a/video/camtest.mp4 b/video/camtest.mp4\ndeleted file mode 100644\nindex a503c89..0000000\nBinary files a/video/camtest.mp4 and /dev/null differ'